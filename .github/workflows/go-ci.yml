name: Go Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
    unittest:
      name: Unitest Test
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
        - name: Setup Go 1.21.8
          uses: actions/setup-go@v4
          with:
            go-version: 1.21.8
        - name: Run unittest
          run: go test -v  ./... 
    quality-check:
      name: Quality Scan
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2
          with:
            fetch-depth: 0
        - uses: sonarsource/sonarqube-scan-action@master
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        # If you wish to fail your job when the Quality Gate is red, uncomment the
        # following lines. This would typically be used to fail a deployment.
        - uses: sonarsource/sonarqube-quality-gate-action@master
          timeout-minutes: 5
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    build-and-push-image:
      name: Build And Push Image
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Setup SHA
          run: echo "GITHUB_SHA=${GITHUB_SHA}" >> $GITHUB_ENV
        - name: Build the Docker image
          run: docker build . --file Dockerfile --tag ghcr.io/puttipong1/go-api:${{ env.GITHUB_SHA }}
        - name: Login ghcr.io
          uses: docker/login-action@v1.8.0
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
            logout: true
        - name: Push to GitHub Container Registry
          uses: docker/build-push-action@v2
          with:
            context: .
            tags: |
              ghcr.io/puttipong1/go-api:${{ env.GITHUB_SHA }}
            push: ${{ github.ref == 'refs/heads/main' }}
        - name: Image digest
          run: echo ${{ steps.docker_build.outputs.digest }}

